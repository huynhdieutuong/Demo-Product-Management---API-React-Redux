{"version":3,"sources":["components/Menu/Menu.js","pages/HomePage/HomePage.js","pages/NotFoundPage/NotFoundPage.js","components/ProductList/ProductList.js","components/ProductItem/ProductItem.js","constants/Config.js","utils/apiCaller.js","actions/index.js","constants/ActionTypes.js","pages/ProductListPage/ProductListPage.js","pages/ProductActionPage/ProductActionPage.js","routes.js","App.js","serviceWorker.js","reducers/products.js","reducers/productEditing.js","reducers/index.js","index.js"],"names":["menus","to","name","exact","MenuLink","_ref","label","activeOnlyWhenExact","react_default","a","createElement","react_router","path","children","_ref2","match","react_router_dom","className","concat","Menu","length","map","menu","index","Menu_MenuLink","key","React","Component","HomePage","NotFoundPage","role","ProductList","this","props","ProductItem","onDelete","id","confirm","_this","_this2","_this$props","product","price","status","type","onClick","API_URL","callApi","endpoint","method","arguments","undefined","data","axios","url","Config","catch","err","console","log","actFetchProducts","products","actDeleteProduct","actAddProduct","actGetProduct","actUpdateProduct","ProductListPage","deleteProduct","fetchAllProducts","ProductList_ProductList","ProductItem_ProductItem","connect","state","dispatch","then","res","actDeleteProductRequest","ProductActionPage","onChange","e","_e$target","target","value","checked","setState","Object","defineProperty","onSave","preventDefault","history","updateProduct","addProduct","goBack","getProduct","params","_this$props$productEd","productEditing","prevProps","_this$props$productEd2","_this$state","onSubmit","actAddProductRequest","actGetProductRequest","actUpdateProductRequest","routes","main","HomePage_HomePage","pages_ProductListPage_ProductListPage","pages_ProductActionPage_ProductActionPage","NotFoundPage_NotFoundPage","App","Menu_Menu","route","component","Boolean","window","location","hostname","initialState","action","toConsumableArray","findIndex","splice","push","myReducers","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","myReducer","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.966167da.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\nconst menus = [\r\n  {\r\n    to: '/',\r\n    name: 'Home',\r\n    exact: true\r\n  },\r\n  {\r\n    to: '/product-list',\r\n    name: 'Product List',\r\n    exact: false\r\n  }\r\n];\r\n\r\nconst MenuLink = ({ label, to, activeOnlyWhenExact }) =>\r\n  <Route\r\n    path={to}\r\n    exact={activeOnlyWhenExact}\r\n    children={({ match }) =>\r\n      <Link \r\n        to={to} \r\n        className={`nav-item nav-link ${match ? 'active' : ''}`}>\r\n        {label}\r\n      </Link>}\r\n  />;\r\n\r\nexport default class Menu extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n        <div className=\"nav navbar-nav\">\r\n          {\r\n            menus.length > 0 && menus.map((menu, index) =>\r\n              <MenuLink \r\n                key={index} \r\n                label={menu.name} \r\n                to={menu.to} \r\n                activeOnlyWhenExact={menu.exact} \r\n              />)\r\n          }\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class HomePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <h1>Home Page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class NotFoundPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"alert alert-warning\" role=\"alert\">\r\n          <strong>Not Found Page</strong>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default class ProductList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">List of Products</h4>\r\n          <table className=\"table table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.children}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class ProductItem extends React.Component {\r\n\r\n  onDelete = id => {\r\n    if (confirm('Are you sure?')) { //eslint-disable-line\r\n      this.props.onDelete(id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { product, index } = this.props;\r\n    return (\r\n      <tr>\r\n        <td>{index + 1}</td>\r\n        <td>{product.id}</td>\r\n        <td>{product.name}</td>\r\n        <td>{product.price}</td>\r\n        <td><span className={`badge badge-${product.status ? 'warning' : 'secondary'}`}>\r\n          {product.status ? 'In Stock' : 'Out of Stock'}\r\n        </span></td>\r\n        <td>\r\n          <Link to={`/product-list/${product.id}/edit`} className=\"btn btn-success\">Edit</Link> {' '}\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.onDelete(product.id)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}","export const API_URL = 'http://5ce7cb689f2c390014dba2ec.mockapi.io/api/';","import axios from 'axios';\r\nimport * as Config from '../constants/Config';\r\n\r\nexport default function callApi(endpoint, method = 'GET', data) {\r\n  return axios({\r\n    method: method,\r\n    url: `${Config.API_URL}/${endpoint}`,\r\n    data: data\r\n  }).catch(err => {\r\n    console.log(err);\r\n  });\r\n}","import * as Types from '../constants/ActionTypes';\r\nimport callApi from '../utils/apiCaller';\r\n\r\n// Fetch Products\r\nexport const actFetchProductsRequest = () => {\r\n  return dispatch => {\r\n    callApi('products', 'GET', null)\r\n      .then(res => {\r\n        dispatch(actFetchProducts(res.data));\r\n      })\r\n  }\r\n}\r\n\r\nexport const actFetchProducts = products => {\r\n  return {\r\n    type: Types.FETCH_PRODUCTS,\r\n    products\r\n  }\r\n}\r\n\r\n// Delete Product\r\nexport const actDeleteProductRequest = id => {\r\n  return dispatch => {\r\n    callApi(`products/${id}`, 'DELETE', null)\r\n      .then(res => {\r\n        dispatch(actDeleteProduct(id));\r\n      })\r\n  }\r\n}\r\n\r\nexport const actDeleteProduct = id => {\r\n  return {\r\n    type: Types.DELETE_PRODUCT,\r\n    id\r\n  }\r\n}\r\n\r\n// Add Product\r\nexport const actAddProductRequest = product => {\r\n  return dispatch => {\r\n    callApi('products', 'POST', product)\r\n      .then(res => {\r\n        dispatch(actAddProduct(res.data));\r\n      })\r\n  }\r\n}\r\n\r\nexport const actAddProduct = product => {\r\n  return {\r\n    type: Types.ADD_PRODUCT,\r\n    product\r\n  }\r\n}\r\n\r\n// Get Product Editing\r\nexport const actGetProductRequest = id => {\r\n  return dispatch => {\r\n    callApi(`products/${id}`, 'GET', null)\r\n      .then(res => {\r\n        dispatch(actGetProduct(res.data));\r\n      })\r\n  }\r\n}\r\n\r\nexport const actGetProduct = product => {\r\n  return {\r\n    type: Types.EDIT_PRODUCT,\r\n    product\r\n  }\r\n}\r\n\r\n// Update Product Editing\r\nexport const actUpdateProductRequest = data => {\r\n  return dispatch => {\r\n    callApi(`products/${data.id}`, 'PUT', data)\r\n      .then(res => {\r\n        dispatch(actUpdateProduct(res.data));\r\n      })\r\n  }\r\n}\r\n\r\nexport const actUpdateProduct = data => {\r\n  return {\r\n    type: Types.UPDATE_PRODUCT,\r\n    data\r\n  }\r\n}","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\r\nexport const EDIT_PRODUCT = 'EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';","import React from 'react';\r\nimport ProductList from '../../components/ProductList/ProductList';\r\nimport ProductItem from '../../components/ProductItem/ProductItem';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { actFetchProductsRequest, actDeleteProductRequest } from '../../actions/index';\r\n\r\nclass ProductListPage extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchAllProducts();\r\n  }\r\n\r\n  onDelete = id => {\r\n    this.props.deleteProduct(id);\r\n  }\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <Link to=\"/product-list/add\" className=\"btn btn-primary my-4\">Add Product</Link>\r\n        <ProductList>\r\n          { products.length > 0 && products.map((product, index) => \r\n              <ProductItem \r\n                key={index} \r\n                product={product} \r\n                index={index} \r\n                onDelete={this.onDelete}\r\n              /> )}\r\n        </ProductList>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.products\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    fetchAllProducts: () => dispatch(actFetchProductsRequest()),\r\n    deleteProduct: id => dispatch(actDeleteProductRequest(id))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListPage);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { actAddProductRequest, actGetProductRequest, actUpdateProductRequest } from '../../actions/index';\r\n\r\nclass ProductActionPage extends React.Component {\r\n  state = {\r\n    id: '',\r\n    name: '',\r\n    price: 0,\r\n    status: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n    if(match) {\r\n      this.props.getProduct(match.params.id);\r\n      const { id, name, price, status } = this.props.productEditing;\r\n      this.setState({\r\n        id,\r\n        name,\r\n        price,\r\n        status\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { id, name, price, status } = this.props.productEditing;\r\n    if(prevProps.productEditing.id !== id) {\r\n      this.setState({\r\n        id,\r\n        name,\r\n        price,\r\n        status\r\n      })\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    let { name, value, type, checked } = e.target;\r\n    value = type === 'checkbox' ? checked : value;\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  onSave = e => {\r\n    e.preventDefault();\r\n    const { history } = this.props;\r\n    const { id } = this.state;\r\n    if (id) {\r\n      this.props.updateProduct(this.state);\r\n    } else {\r\n      this.props.addProduct(this.state);\r\n    }\r\n    history.goBack();\r\n  }\r\n\r\n  render() {\r\n    const { name, price, status } = this.state;\r\n    return (\r\n      <div className=\"col-md-6\">\r\n        <form onSubmit={this.onSave}>\r\n          <div className=\"form-group\">\r\n            <label>Name:</label>\r\n            <input type=\"text\" className=\"form-control\" name=\"name\" onChange={this.onChange} value={name} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Price:</label>\r\n            <input type=\"number\" className=\"form-control\" name=\"price\" onChange={this.onChange} value={price} />\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <label className=\"form-check-label\">\r\n              <input type=\"checkbox\" className=\"form-check-input\" name=\"status\" checked={status} onChange={this.onChange} />\r\n              In Stock\r\n            </label>\r\n          </div>\r\n          <Link to=\"/product-list\" className=\"btn btn-danger\">Back</Link> {' '}\r\n          <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    productEditing: state.productEditing\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    addProduct: product => dispatch(actAddProductRequest(product)),\r\n    getProduct: id => dispatch(actGetProductRequest(id)),\r\n    updateProduct: data => dispatch(actUpdateProductRequest(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductActionPage);","import React from 'react';\r\nimport HomePage from './pages/HomePage/HomePage';\r\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\r\nimport ProductListPage from './pages/ProductListPage/ProductListPage';\r\nimport ProductActionPage from './pages/ProductActionPage/ProductActionPage';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    main: () => <HomePage />\r\n  },\r\n  {\r\n    path: '/product-list',\r\n    exact: true,\r\n    main: () => <ProductListPage />\r\n  },\r\n  {\r\n    path: '/product-list/add',\r\n    exact: false,\r\n    main: ({history}) => <ProductActionPage history={history} />\r\n  },\r\n  {\r\n    path: '/product-list/:id/edit',\r\n    exact: false,\r\n    main: ({match, history}) => <ProductActionPage match={match} history={history} />\r\n  },\r\n  {\r\n    path: '',\r\n    exact: false,\r\n    main: () => <NotFoundPage />\r\n  }\r\n];\r\n\r\nexport default routes;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Menu from './components/Menu/Menu';\n\nimport routes from './routes';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Menu />\n        <div className=\"container\">\n          <div className=\"row\">\n          <Switch>\n            {\n              routes.length > 0 && routes.map((route, index) => \n                <Route key={index} exact={route.exact} path={route.path} component={route.main} />)\n            }\n          </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Types from '../constants/ActionTypes';\r\nconst initialState = [];\r\n\r\nconst products = (state = initialState, action) => {\r\n  const { id, products, product, data } = action;\r\n  let index = -1;\r\n  switch(action.type) {\r\n    case Types.FETCH_PRODUCTS:\r\n      state = products;\r\n      return [...state];\r\n    case Types.DELETE_PRODUCT:\r\n      index = state.findIndex(product => product.id === id);\r\n      state.splice(index, 1);\r\n      return [...state];\r\n    case Types.ADD_PRODUCT:\r\n      state.push(product);\r\n      return [...state];\r\n    case Types.UPDATE_PRODUCT:\r\n      index = state.findIndex(product => product.id === data.id);\r\n      state[index] = data;\r\n      return [...state];\r\n    default: return [...state];\r\n  }\r\n}\r\n\r\nexport default products;","import * as Types from '../constants/ActionTypes';\r\n\r\nconst initialState = {};\r\n\r\nconst productEditing = (state = initialState, action) => {\r\n  const { type, product } = action;\r\n  switch (type) {\r\n    case Types.EDIT_PRODUCT:\r\n      return product;\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default productEditing;","import { combineReducers } from 'redux';\r\nimport products from './products';\r\nimport productEditing from './productEditing';\r\n\r\nconst myReducers = combineReducers({\r\n  products,\r\n  productEditing\r\n});\r\n\r\nexport default myReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Store\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport myReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  myReducer,\n  composeEnhancer(applyMiddleware(thunk))\n  );\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}